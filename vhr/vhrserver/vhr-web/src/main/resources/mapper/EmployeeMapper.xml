<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.vhr.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.song.vhr.model.Employee">
    <!--@mbg.generated-->
    <!--@Table employee-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="idCard" jdbcType="CHAR" property="idcard" />
    <result column="wedlock" jdbcType="OTHER" property="wedlock" />
    <result column="nationId" jdbcType="INTEGER" property="nationid" />
    <result column="nativePlace" jdbcType="VARCHAR" property="nativeplace" />
    <result column="politicId" jdbcType="INTEGER" property="politicid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentid" />
    <result column="jobLevelId" jdbcType="INTEGER" property="joblevelid" />
    <result column="posId" jdbcType="INTEGER" property="posid" />
    <result column="engageForm" jdbcType="VARCHAR" property="engageform" />
    <result column="tiptopDegree" jdbcType="OTHER" property="tiptopdegree" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="beginDate" jdbcType="DATE" property="begindate" />
    <result column="workState" jdbcType="OTHER" property="workstate" />
    <result column="workID" jdbcType="CHAR" property="workid" />
    <result column="contractTerm" jdbcType="DOUBLE" property="contractterm" />
    <result column="conversionTime" jdbcType="DATE" property="conversiontime" />
    <result column="notWorkDate" jdbcType="DATE" property="notworkdate" />
    <result column="beginContract" jdbcType="DATE" property="begincontract" />
    <result column="endContract" jdbcType="DATE" property="endcontract" />
    <result column="workAge" jdbcType="INTEGER" property="workage" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, 
    email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, 
    specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
    <insert id="addEmps">
        insert into employee (name, gender,
        birthday, idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate, workState, workID,
        contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
        )
        values
        <foreach collection="list" separator="," item="emp">
            (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
            #{emp.birthday,jdbcType=DATE}, #{emp.idcard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR},
            #{emp.nationid,jdbcType=INTEGER},
            #{emp.nativeplace,jdbcType=VARCHAR}, #{emp.politicid,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
            #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentid,jdbcType=INTEGER},
            #{emp.joblevelid,jdbcType=INTEGER}, #{emp.posid,jdbcType=INTEGER}, #{emp.engageform,jdbcType=VARCHAR},
            #{emp.tiptopdegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
            #{emp.begindate,jdbcType=DATE}, #{emp.workstate,jdbcType=CHAR}, #{emp.workid,jdbcType=CHAR},
            #{emp.contractterm,jdbcType=DOUBLE}, #{emp.conversiontime,jdbcType=DATE}, #{emp.notworkdate,jdbcType=DATE},
            #{emp.begincontract,jdbcType=DATE}, #{emp.endcontract,jdbcType=DATE}, #{emp.workage,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.song.vhr.model.Employee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee (`name`, gender, birthday, 
      idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, 
      #{idcard,jdbcType=CHAR}, #{wedlock,jdbcType=OTHER}, #{nationid,jdbcType=INTEGER}, 
      #{nativeplace,jdbcType=VARCHAR}, #{politicid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER}, 
      #{joblevelid,jdbcType=INTEGER}, #{posid,jdbcType=INTEGER}, #{engageform,jdbcType=VARCHAR}, 
      #{tiptopdegree,jdbcType=OTHER}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{begindate,jdbcType=DATE}, #{workstate,jdbcType=OTHER}, #{workid,jdbcType=CHAR}, 
      #{contractterm,jdbcType=DOUBLE}, #{conversiontime,jdbcType=DATE}, #{notworkdate,jdbcType=DATE}, 
      #{begincontract,jdbcType=DATE}, #{endcontract,jdbcType=DATE}, #{workage,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.song.vhr.model.Employee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationid != null">
        nationId,
      </if>
      <if test="nativeplace != null">
        nativePlace,
      </if>
      <if test="politicid != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="joblevelid != null">
        jobLevelId,
      </if>
      <if test="posid != null">
        posId,
      </if>
      <if test="engageform != null">
        engageForm,
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="workstate != null">
        workState,
      </if>
      <if test="workid != null">
        workID,
      </if>
      <if test="contractterm != null">
        contractTerm,
      </if>
      <if test="conversiontime != null">
        conversionTime,
      </if>
      <if test="notworkdate != null">
        notWorkDate,
      </if>
      <if test="begincontract != null">
        beginContract,
      </if>
      <if test="endcontract != null">
        endContract,
      </if>
      <if test="workage != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=OTHER},
      </if>
      <if test="nationid != null">
        #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        #{tiptopdegree,jdbcType=OTHER},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        #{workstate,jdbcType=OTHER},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        #{workage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.vhr.model.Employee">
    <!--@mbg.generated-->
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        idCard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        wedlock = #{wedlock,jdbcType=OTHER},
      </if>
      <if test="nationid != null">
        nationId = #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        nativePlace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        politicId = #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        jobLevelId = #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        posId = #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        engageForm = #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree = #{tiptopdegree,jdbcType=OTHER},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        workState = #{workstate,jdbcType=OTHER},
      </if>
      <if test="workid != null">
        workID = #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        contractTerm = #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        conversionTime = #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        notWorkDate = #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        beginContract = #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        endContract = #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        workAge = #{workage,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.vhr.model.Employee">
    <!--@mbg.generated-->
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idcard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=OTHER},
      nationId = #{nationid,jdbcType=INTEGER},
      nativePlace = #{nativeplace,jdbcType=VARCHAR},
      politicId = #{politicid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=INTEGER},
      jobLevelId = #{joblevelid,jdbcType=INTEGER},
      posId = #{posid,jdbcType=INTEGER},
      engageForm = #{engageform,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopdegree,jdbcType=OTHER},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{begindate,jdbcType=DATE},
      workState = #{workstate,jdbcType=OTHER},
      workID = #{workid,jdbcType=CHAR},
      contractTerm = #{contractterm,jdbcType=DOUBLE},
      conversionTime = #{conversiontime,jdbcType=DATE},
      notWorkDate = #{notworkdate,jdbcType=DATE},
      beginContract = #{begincontract,jdbcType=DATE},
      endContract = #{endcontract,jdbcType=DATE},
      workAge = #{workage,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <resultMap id="AllEmployeeInfo" extends="BaseResultMap" type="com.song.vhr.model.Employee">
      <association property="nation" javaType="com.song.vhr.model.Nation">
          <id column="nid" property="id"/>
          <result column="nname" property="name"/>
      </association>
      <association property="politicsstatus" javaType="com.song.vhr.model.Politicsstatus">
          <id column="pid" property="id"/>
          <result column="pname" property="name"/>
      </association>
        <association property="position" javaType="com.song.vhr.model.Position">
            <id column="posid" property="id"/>
            <result column="posname" property="name"/>
        </association>
        <association property="department" javaType="com.song.vhr.model.Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="jobLevel" javaType="com.song.vhr.model.JobLevel">
            <id column="jid" property="id"/>
            <result column="jname" property="name"/>
        </association>
    </resultMap>
    <select id="getEmployeeByPage" resultMap="AllEmployeeInfo">
select e.*,p.`id` as pid,p.`name` as pname,n.`id` as nid,n.`name` as nname,d.`id` as did,d.`name` as
        dname,j.`id` as jid,j.`name` as jname,pos.`id` as posid,pos.`name` as posname from employee e,nation
        n,politicsstatus p,department d,joblevel j,position pos where e.`nationId`=n.`id` and e.`politicId`=p.`id` and
        e.`departmentId`=d.`id` and e.`jobLevelId`=j.`id` and e.`posId`=pos.`id`
        <if test="employee.name !=null and employee.name!=''">
            and e.name like concat('%',#{employee.name},'%')
        </if>
        <if test="employee.politicid !=null">
            and e.politicId =#{employee.politicid}
        </if>
        <if test="employee.nationid !=null">
            and e.nationId =#{employee.nationid}
        </if>
        <if test="employee.departmentid !=null">
            and e.departmentId =#{employee.departmentid}
        </if>
        <if test="employee.joblevelid !=null">
            and e.jobLevelId =#{employee.joblevelid}
        </if>
        <if test="employee.engageform !=null and employee.engageform!=''">
            and e.engageForm =#{employee.engageform}
        </if>
        <if test="employee.posid !=null">
            and e.posId =#{employee.posid}
        </if>
        <if test="begindatescope !=null and begindatescope !=''">
            and e.beginDate between #{begindatescope[0]} and #{begindatescope[1]}
        </if>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>

    </select>
  <select id="getTotal" resultType="java.lang.Long">
    select count(id) from employee e where 1=1
      <if test="employee!=null">
          <if test="employee.name !=null and employee.name!=''">
              and e.name like concat('%',#{employee.name},'%')
          </if>
          <if test="employee.politicid !=null">
              and e.politicId =#{employee.politicid}
          </if>
          <if test="employee.nationid !=null">
              and e.nationId =#{employee.nationid}
          </if>
          <if test="employee.departmentid !=null">
              and e.departmentId =#{employee.departmentid}
          </if>
          <if test="employee.joblevelid !=null">
              and e.jobLevelId =#{employee.joblevelid}
          </if>
          <if test="employee.engageform !=null and employee.engageform!=''">
              and e.engageForm =#{employee.engageform}
          </if>
          <if test="employee.posid !=null">
              and e.posId =#{employee.posid}
          </if>
      </if>
      <if test="begindatescope !=null and begindatescope !=''">
          and e.beginDate between #{begindatescope[0]} and #{begindatescope[1]}
      </if>
  </select>
    <select id="maxWordID" resultType="java.lang.Integer">
       select max(workID) from employee
    </select>

</mapper>