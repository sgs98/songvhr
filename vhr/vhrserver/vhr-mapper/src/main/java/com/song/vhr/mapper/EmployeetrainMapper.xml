<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.vhr.mapper.EmployeetrainMapper">
  <resultMap id="BaseResultMap" type="com.song.vhr.model.Employeetrain">
    <!--@mbg.generated-->
    <!--@Table employeetrain-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="trainDate" jdbcType="DATE" property="traindate" />
    <result column="trainContent" jdbcType="VARCHAR" property="traincontent" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, eid, trainDate, trainContent, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from employeetrain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.song.vhr.model.Employeetrain" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employeetrain (eid, trainDate, trainContent, 
      remark)
    values (#{eid,jdbcType=INTEGER}, #{traindate,jdbcType=DATE}, #{traincontent,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.song.vhr.model.Employeetrain" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into employeetrain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="traindate != null">
        trainDate,
      </if>
      <if test="traincontent != null">
        trainContent,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null">
        #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null">
        #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.vhr.model.Employeetrain">
    <!--@mbg.generated-->
    update employeetrain
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="traindate != null">
        trainDate = #{traindate,jdbcType=DATE},
      </if>
      <if test="traincontent != null">
        trainContent = #{traincontent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.vhr.model.Employeetrain">
    <!--@mbg.generated-->
    update employeetrain
    set eid = #{eid,jdbcType=INTEGER},
      trainDate = #{traindate,jdbcType=DATE},
      trainContent = #{traincontent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <resultMap id="EmployeeTranWithEmp" extends="BaseResultMap" type="com.song.vhr.model.Employeetrain">
        <association property="employee" javaType="com.song.vhr.model.Employee">
            <id column="eid" property="id"/>
            <result column="name" property="name"/>
            <result column="gender" property="gender"/>
            <result column="birthday" property="birthday"/>
            <result column="idCard" property="idcard"/>
            <result column="email" property="email"/>
            <result column="phone" property="phone"/>
            <result column="address" property="address"/>
        </association>
      <association property="department" javaType="com.song.vhr.model.Department">
        <result column="dname" property="name"/>
      </association>
      <association property="jobLevel" javaType="com.song.vhr.model.JobLevel">
        <result column="jname" property="name"/>
      </association>
    </resultMap>
    <select id="getEmployeeTranByPage" resultMap="EmployeeTranWithEmp">
    select emp.id eid, emp.`name` name,emp.gender gender,emp.birthday birthday,emp.idCard idCard,
    emp.email email,emp.phone phone,emp.address address,et.id id,et.trainDate,et.trainContent,et.remark
    from employee emp, employeetrain et where emp.id=et.eid
        <if test="keywords != null and keywords != ''">
            and emp.name like concat('%',#{keywords},'%')
        </if>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(et.id) from employee emp, employeetrain et where emp.id=et.eid
        <if test="keywords != null and keywords != ''">
            and emp.name like concat('%',#{keywords},'%')
        </if>
    </select>
    <select id="getAllEmployee" resultType="com.song.vhr.model.Employee">
        select s.basicSalary salarys, emp.id id, j.name jname,d.name dname, emp.id eid, emp.`name` name,emp.gender gender,emp.birthday birthday,emp.idCard idCard,
        emp.email email,emp.phone phone,emp.address address
        from employee emp LEFT JOIN department d on emp.departmentid=d.id LEFT JOIN joblevel j ON emp.jobLevelId=j.id
        LEFT JOIN empsalary es on es.eid=emp.id LEFT JOIN salary s on es.sid=s.id
        <if test="page !=null and size !=null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotalEmp" resultType="java.lang.Long">
        select count(*) from employee
    </select>
</mapper>